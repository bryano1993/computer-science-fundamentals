
A line of people at an amusement park ride.

The line is composed of members, represented as strings.
There is a front to the line, as well as a back.
When someone enters the line, place them at the end.
People may leave the line whenever they see fit, and those behind them take their place.
Given the above real-world information, use an array data structure to code the following solution.

a) Use an array input: ["Vivian", "Ava", "Josh", "Patrick", "Mike"]

let anArray = ["Vivian", "Ava", "Josh", "Patrick", "Mike"];

b) Insert a new person, "Mary" at the end of the line. In other words, you should insert Mary after Mike.

anArray.push("Mary");

c) Find a person in line named "Josh." This function should return the position of 2 in the array, (recall that arrays are 0-based).

function findSomeone (name){
   return (anArray.indexOf(name));
  }

d) Find a person in line named "Emily." What should your function return if it does not find the item in the array?

function findSomeone (name){
   return (anArray.indexOf(name));
  }

It will return a -1

e) What if Ava wants to allow a friend, "Melissa", to cut in line in front of her? How would you code this so Melissa appears before Ava?

function cutInFontOfAva(name){
  anArray.splice(1,0,name);
  console.log(anArray);
}


console.log(cutInFontOfAva("Melissa"));


f) If Patrick wants to leave the line, how would you delete him from the array?

function deleteAnArray(index,howMany){
  anArray.splice(index,howMany);
  console.log(anArray);
}


console.log(deleteAnArray(3,1));


2. Provide another real-world example that you can model using a data structure.

Another real-world example would be a family tree

3.How would your data structure allow developers to access and manipulate the data?

My data structure would allow developers to access and manipulate the data by incorporating trees and graphs.
