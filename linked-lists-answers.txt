1. What are some pros and cons of using linked lists instead of arrays?

- A linked list will never have any empty placeholders because of how you have to dynamically instantiate every node. Also, each node is independent in memory, so the operating system may use any available memory location to store it.
Cons of a linked list is that 

2.Come up with a real world example of a linked list.

- A simple real life example of a linked list would be a train, here each coach is connected to its previous and next coach (Except first and last). Each coach body can be considered a node value and connectors as links to previous and next nodes.

Programming Questions
You may program the following questions in any language of your choice (JavaScript, pseudocode, etc.).

Before beginning to code, write out a plan explaining how to solve the question.

The Linked List push function should take a value, create a node, and add it to the end of a list. Below is a push function for a singly linked list. However, there is something wrong with it. Find the bug and fix the code.

LinkedList.prototype.push = function(element) {
 SET node = {
   value: element,
   next: null
 }

 IF the head node does not exist
   THEN SET head to node
 ELSE
   SET current node to head
   WHILE current.next is NOT null
    SET current node to current.next
   ENDWHILE
   SET current.next to node
 }
}



2.Given an unsorted singly linked list, remove all duplicates from the linked list.
Example
Input: a -> c -> d -> d -> a
Output: a -> c -> d

LinkedList.prototype.removeDuplicates = function () {
    if (!this.head || !this.head.next) {
      console.log('No duplicates were found. Empty or a single element Linked List.');
      return;
    }

    var p1;
    var p2;
    var nodes = {};

    p1 = this.head;
    p2 = p1.next;
    nodes[p1.data] = true;

    while (p2) {
        var data = p2.data;
        if (nodes[data]) {
            p1.next = p2.next;
        } else {
            nodes[data] = true;
            p1 = p2;
        }
        p2 = p2.next;
    }
};

3.Given an unsorted singly linked list, reverse it.
Example
Input: a -> b -> c -> d
Output: d -> c -> b -> a

LinkedList.prototype.reverseLinkedList = function () {

  if (!this.head || !this.head.next) {
    console.log('No duplicates were found. Empty or a single element Linked List.');
    return;
  }
  
  var p1 = null;
  var p2 = this.head;
  var p3;

  while (p2) {
    p3 = p2.next;
    p2.next = p1;
    p1 = p2;
    p2 = p3;
  }

  this.head = p1;
}