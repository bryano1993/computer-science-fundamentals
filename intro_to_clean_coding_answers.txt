1. In your own words, explain what clean code is and why it is important.
    
Clean code is the action of writing code that readable and maintainable.

2. Read this article about Toyota and their use of bad code. Although you may not yet understand all of the topics discussed, 
think about another commonly used object that relies on computers and explain what would happen if the code was not created to an acceptable standard.


Another commonly used object that relies on computers are airplanes. If code was not created to an acceptable standard the plane could accidently hit objects 
and cause it to crash. This is if the radar system involved was not programmed to acceptable standards. Also if the coding involving communcation to air traffic
controllers were not programmed to acceptable standards, landing might not be as pleasent as expected.

3. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

No I would not consider the following code to be clean code because the code can be refactored by extracting its methods to improve the codes quality. 


FUNCTION do(x, y)               // Creating a new function
 IF y = "F" THEN               // Check if y is equal "F"
 CALL z = toCelsius(x)          
 PRINT z                       // Print result
 ELSE IF y = "C" THEN          // If y not equal to "F", check if equal to "C"
 CALL z = toFahrenheit(x)       
 PRINT z                       // Print result
 END IF
END FUNCTION

FUNCTION toCelsius(x)            // Formula to convert degrees fahrenheit to celsius
 z to (xâˆ’32) * (5/9) 
END FUNCTION

FUNCTION toFahrenheit(x)        // Formula to convert degrees celsius to fahrenheit
 z to x * 1.8000 + 32.00 
END FUNCTION


4. Would you consider the following to be clean code? Explain why or why not. If not, refactor the code.

Yes I would consider the following code to be clean code because it passes the Squint Test. There is not blocks of identical code therefore no refactoring is needed.
Overall the code is maintainable and readable

5. Using pseudocode, refactor the code for the following examples using the principles you have learned in this checkpoint.

FUNCTION checkOutCustomer(subTotal, discountRate, paymentType)
   PRINT "Your total due is: " + subTotal * discountRate + (subTotal * tax)

   IF paymentType = 'CASH' THEN
       CALL getPayment RETURNING amount
       PRINT "Change due: " + amount - subTotal * discountRate + (subTotal * tax)
   ELSE IF paymentType = 'CREDIT CARD' THEN
       CALL getPayment RETURNING amount
       PRINT "Your credit card has been charged: " + subTotal * discountRate + (subTotal * tax)
   END IF
END FUNCTION

FUNCTION getPayment()
 RETURN amount
END FUNCTION

b. The following function checks out a book if there are no issues with the guest's account.

FUNCTION checkoutBook(book, guest)

IF guest.accountActive AND NOT(guest.hasOverdueBooks) AND IF guest.outstandingFees = 0 THEN
    APPEND book to guest.books
        SET book.status to "Checked Out"
        PRINT "Your books have been issued."
    END IF
ELSE
     PRINT "Unable to check out book."
END IF
END FUNCTION

c. The following class is a code snippet that should support the transactions a customer can perform at an ATM.

CLASS BankAccount

 FUNCTION displayBalance
    PRINT balance
 END FUNCTION

 FUNCTION deposit(amount)
    SET balance to balance + amount
 END FUNCTION

 FUNCTION withdraw(amount)
     IF balance > amount THEN
       SET balance to balance - amount
     END
 END FUNCTION

END

CLASS CreditCard
 FUNCTION creditCardOffer
     IF NOT(customer.hasCreditCard) THEN
         CALL offerCreditCard
     END
 END FUNCTION

END

CLASS checkChecking
 FUNCTION checkStatus
     IF NOT(customer.hasCheckingAccount) THEN
         CALL offerCheckingAccount
     END
 END FUNCTION

END




Programming Questions

6.Square Given an array of integers, find out whether the sum of the integers is a perfect square. If it is a perfect square, return the square root, otherwise return the sum.

function foo (anArray){
  let sum = 0;
  for(var i = 0; i<anArray.length;i++){
     sum = anArray[i] + sum;
}
  if (sum > 0 && Math.sqrt(sum) % 1 === 0){
    return (Math.sqrt(sum));
  } else {
    return sum;
  }
}



7.Duplicate Given an array of integers, find out whether the array contains any duplicate elements. The function should return true if any value appears at least twice in the array, and false if every element is distinct.

function foo(anArray) {

  let result = [];

  anArray.forEach(function(element, index) {
    
    if (anArray.indexOf(element, index + 1) > -1) {
      
      if (result.indexOf(element) === -1) {
        result.push(element);
      }
    }
  });

  return result;
}

